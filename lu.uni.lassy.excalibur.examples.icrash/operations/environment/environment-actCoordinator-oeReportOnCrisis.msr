package icrash.operations.environment.actCoordinator.oeReportOnCrisis {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar
import icrash.concepts.primarytypes.datatypes
import icrash.environment
import icrash.concepts.primarytypes.classes

Operation Model {

operation: actCoordinator.outactCoordinator.oeReportOnCrisis(AdtCrisisID:dtCrisisID, AdtComment:dtComment):ptBoolean{

	preP {
		let TheSystem: ctState in
  		let TheActor:actAuthenticated in
  		self.rnActor.rnSystem = TheSystem
  		and self.rnActor = TheActor
  
		/* PreP01 */
  		and TheSystem.vpStarted = true
		/* PreP02 */
  		and TheActor.rnctAuthenticated.vpIsLogged = true
	}
	
	preF {
		let TheSystem: ctState in
		let TheCrisisSet: Set(ctCrisis) in
		TheSystem = self.rnActor.rnSystem
		and TheSystem.rnctCrisis = TheCrisisSet
		and TheCrisisSet->exists(c: ctCrisis | c.id = AdtCrisisID)
	}
	
	postF {
		let TheSystem: ctState in
		let TheCrisisSet: Set(ctCrisis) in
		let TheCrisis: ctCrisis in
		TheSystem = self.rnActor.rnSystem
		and TheSystem.rnctCrisis = TheCrisisSet
		and TheCrisis = TheCrisisSet->any(c: ctCrisis | c.id = AdtCrisisID)
		and TheCrisis@post.comment = AdtComment
	}
	
	postP {
		true
	}

prolog{"src/Operations/Environment/OUT/outactCoordinator-oeReportOnCrisis.pl"}
}

}
}