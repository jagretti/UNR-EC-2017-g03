package icrash.operations.environment.actCoordinator.oeGetCrisisSet {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar
import icrash.concepts.primarytypes.datatypes
import icrash.environment
import icrash.concepts.primarytypes.classes

Operation Model {

operation: actCoordinator.outactCoordinator.oeGetCrisisSet(
	AetCrisisStatus:etCrisisStatus):ptBoolean{
	
	preP {
		let TheSystem: ctState in
  		let TheActor:actAuthenticated in
  		self.rnActor.rnSystem = TheSystem
  		and self.rnActor = TheActor
  
		/* PreP01 */
  		and TheSystem.vpStarted = true
		/* PreP02 */
  		and TheActor.rnctAuthenticated.vpIsLogged = true
	}

	preF {true}
	
	postF{
		let 
			theSystem: ctState = self.rnActor.rnSystem,
			theCrisisSet: Set(ctCrisis) = Set{}
		in
			theCrisisSet = theSystem.rnctAlert-> select(a:ctCrisis | a.status = AetCrisisStatus)
			and	theCrisisSet->forAll(a:ctCrisis | self.rnActor.rnInterfaceIN^ieSendACrisis(a))
	}
	
	postP{true}

	//prolog{"src/Operations/Environment/OUT/outactCoordinator-oeGetCrisisSet.pl"}
}
}
}