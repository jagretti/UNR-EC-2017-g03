package icrash.usecases.ugAdministrateTheSystem {

	import icrash.environment
	import icrash.usecases.ugSecurelyUseSystem
	import icrash.usecases.subfunctions

	Use Case Model {
		
		use case system usergoal 
		  ugAdministrateTheSystem() {
			actor actAdministrator[primary,active]

			reuse ugSecurelyUseSystem[1..*]
			reuse oeAddCoordinator[1..*]
			reuse oeDeleteCoordinator[0..*]
			reuse oeAddHospital[0..*]
			reuse oeDeleteHospital[0..*]
			
			step a: actAdministrator 
			    executes ugSecurelyUseSystem
			step b: actAdministrator 
			    executes oeAddCoordinator
			step c: actAdministrator
			    executes oeDeleteCoordinator
			step d: actAdministrator
				executes oeAddHospital
			step e: actAdministrator
				executes oeDeleteHospital
			
			ordering constraint 
			   "steps (a) (b) and (c) executions are interleaved 
          (steps (b) (c) (d) and (e) have their protocol constrained 
           by steps of (a))."
      ordering constraint 
          "steps (a) (b) (c) (d) and (e) can be executed multiple times."
		}
	}
}