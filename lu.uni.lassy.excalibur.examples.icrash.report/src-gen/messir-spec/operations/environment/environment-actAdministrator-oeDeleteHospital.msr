package icrash.environment.operations.actAdministrator.outactAdministrator.oeDeleteHospital {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar
import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

	Operation Model {

		operation: icrash.environment.actAdministrator.outactAdministrator.oeDeleteHospital(
			AdtHospitalID:dtHospitalID
		):ptBoolean{
		// include below the specification information (pre,post or ocl or prolog)
			preP {
				let TheSystem: ctState in
 				let TheActor:actAdministrator in
  
  				self.rnActor.rnSystem = TheSystem
  				and self.rnActor = TheActor
  				and TheSystem.vpStarted = true
  				and TheActor.rnctAuthenticated.vpIsLogged = true
			}
			
			preF {
				let TheSystem: ctState in
 				let TheActor:actAdministrator in
 				let TheHospitals: Set(ctHospital) in
  
  				self.rnActor.rnSystem = TheSystem
  				and self.rnActor = TheActor
  				
  				TheSystem.rnctHospital->select(id.eq(AdtHospitalID)) = TheHospitals
  				and TheHospitals->size() = 1
			}
			
			postF{
				let TheSystem: ctState in
 				let TheActor:actAdministrator in
 				let TheHospital:ctHospital in
  
  				self.rnActor.rnSystem = TheSystem
  				and self.rnActor = TheActor
  				
  				TheSystem.rnctHospital->select(id.eq(AdtHospitalID)) = TheHospital //Consultar
  				and TheHospital.rnactHospital->forAll(msrIsKilled)
  				and TheHospital.msrIsKilled
  				
  				and TheActor.rnInterfaceIN^ieHospitalDeleted(AdtHospitalID)
			}
			
			postP{true}
		}
	}
}
